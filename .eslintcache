[{"E:\\area\\eot_restaurant\\src\\index.js":"1","E:\\area\\eot_restaurant\\src\\App.js":"2","E:\\area\\eot_restaurant\\src\\reportWebVitals.js":"3","E:\\area\\eot_restaurant\\src\\components\\gameBox\\GameBox.js":"4","E:\\area\\eot_restaurant\\src\\components\\welcomeScreen\\WelcomeScreen.js":"5","E:\\area\\eot_restaurant\\src\\components\\equipment\\Equipment.js":"6","E:\\area\\eot_restaurant\\src\\components\\mainVideo\\MainVideo.js":"7","E:\\area\\eot_restaurant\\src\\components\\drink\\Drink.js":"8","E:\\area\\eot_restaurant\\src\\components\\glass\\Glass.js":"9","E:\\area\\eot_restaurant\\src\\components\\alertVideo\\AlertVideo.js":"10","E:\\area\\eot_restaurant\\src\\components\\pour\\Pour.js":"11","E:\\area\\eot_restaurant\\src\\components\\decide\\Decide.js":"12","E:\\area\\eot_restaurant\\src\\components\\speech\\Speech.js":"13","E:\\area\\eot_restaurant\\src\\components\\signsList\\SignsList.js":"14","E:\\area\\eot_restaurant\\src\\components\\preloader\\Preloader.js":"15","E:\\area\\eot_restaurant\\src\\actions\\postMessage.js":"16"},{"size":511,"mtime":1609979748000,"results":"17","hashOfConfig":"18"},{"size":773,"mtime":1607651948000,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1606159840000,"results":"20","hashOfConfig":"18"},{"size":9183,"mtime":1610994304751,"results":"21","hashOfConfig":"18"},{"size":2213,"mtime":1610238910392,"results":"22","hashOfConfig":"18"},{"size":14511,"mtime":1607701756000,"results":"23","hashOfConfig":"18"},{"size":6235,"mtime":1610996952232,"results":"24","hashOfConfig":"18"},{"size":16571,"mtime":1607710398000,"results":"25","hashOfConfig":"18"},{"size":20733,"mtime":1607705966000,"results":"26","hashOfConfig":"18"},{"size":3504,"mtime":1610996962567,"results":"27","hashOfConfig":"18"},{"size":622,"mtime":1607711392000,"results":"28","hashOfConfig":"18"},{"size":1591,"mtime":1607646736000,"results":"29","hashOfConfig":"18"},{"size":949,"mtime":1607643126000,"results":"30","hashOfConfig":"18"},{"size":5059,"mtime":1607650442000,"results":"31","hashOfConfig":"18"},{"size":293,"mtime":1610128669335,"results":"32","hashOfConfig":"18"},{"size":694,"mtime":1610381528027,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1q6nzbi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\area\\eot_restaurant\\src\\index.js",[],["69","70"],"E:\\area\\eot_restaurant\\src\\App.js",[],"E:\\area\\eot_restaurant\\src\\reportWebVitals.js",[],"E:\\area\\eot_restaurant\\src\\components\\gameBox\\GameBox.js",["71","72","73"],"import React, { useState, useEffect } from 'react'\r\nimport classes from './GameBox.module.css'\r\nimport MainVideo from '../mainVideo/MainVideo'\r\nimport Equipment from '../equipment/Equipment'\r\nimport Glass from '../glass/Glass'\r\nimport Drink from '../drink/Drink'\r\nimport Pour from '../pour/Pour'\r\n\r\nimport screenfull from 'screenfull'\r\n\r\nimport gameData from '../../gameData.json'\r\nimport crowdSound from '../../media/audio/crowd.mp3'\r\nimport AlertVideo from '../alertVideo/AlertVideo'\r\nimport postMessage from '../../actions/postMessage'\r\n\r\n\r\nconst times = [\r\n    \"10:38 PM\",\r\n    \"10:57 PM\",\r\n    \"11:12 PM\",\r\n    \"11:45 PM\",\r\n    \"12:07 AM\",\r\n    \"12:28 AM\"\r\n]\r\n\r\nvar doTimeout = null;\r\n\r\nconst GameBox = ({ goToFirst }) => {\r\n\r\n    const [level, setLevel] = useState(0)\r\n    const [step, setStep] = useState(0)\r\n    const [showGuides, setShowGuides] = useState(false)\r\n    const [hearts, setHearts] = useState(2)\r\n    const [videoSrc, setVideoSrc] = useState(0)\r\n    const [isLoop, setIsLoop] = useState(false)\r\n    const [hasSpeech, setHasSpeech] = useState(false)\r\n    const [speech, setSpeech] = useState({\r\n        text: \"\",\r\n        time: 0\r\n    })\r\n    const [actionType, setActionType] = useState(\"watch\")\r\n    const [orderDetail, setOrderDetail] = useState(\"\")\r\n    const [watchWrong, setWatchWrong] = useState(false)\r\n    const [tempVideoSrc, setTempVideoSrc] = useState(null)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const [alertId, setAlertId] = useState(0)\r\n    const [isMuted, setIsMuted] = useState(false)\r\n    const [isFullScr, setIsFullScr] = useState(false)\r\n    const [platform, setPlatform] = useState(\"unknown\")\r\n    const [curTime, setCurTime] = useState(0)\r\n\r\n    const goNextStep = (skip) => {\r\n        console.log(\"NEXT! \", skip)\r\n        if (watchWrong) {\r\n            setWatchWrong(false)\r\n            setVideoSrc(tempVideoSrc)\r\n            setIsLoop(true)\r\n        } else {\r\n            if (skip) {\r\n                setStep(step + 2)\r\n            } else {\r\n                if (step === gameData[level].length - 1) {\r\n                    if (level === gameData.length - 1) {\r\n                        postMessage(3);\r\n                        goToFirst()\r\n                    } else {\r\n                        setCurTime(0)\r\n                        setLevel(level + 1)\r\n                        setStep(0)\r\n                        setHearts(2)\r\n                    }\r\n                } else {\r\n                    setStep(step + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPlatform(iOS())\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (curTime > 3) {\r\n            setAlertId(((level + 1) * 2) - 1)\r\n            setShowAlert(true)\r\n        }\r\n        clearTimeout(doTimeout)\r\n        doTimeout = setTimeout(() => {\r\n            setCurTime(curTime + 1)\r\n        }, 23000);\r\n\r\n        return () => {\r\n            clearTimeout(doTimeout)\r\n        }\r\n    }, [curTime])\r\n\r\n    function iOS() {\r\n        return [\r\n            'iPad Simulator',\r\n            'iPhone Simulator',\r\n            'iPod Simulator',\r\n            'iPad',\r\n            'iPhone',\r\n            'iPod'\r\n        ].includes(navigator.platform)\r\n            // iPad on iOS 13 detection\r\n            || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n    }\r\n\r\n    useEffect(() => {\r\n        var gData = gameData[level][step];\r\n        setActionType(gData.playType);\r\n        switch (gData.playType) {\r\n            case 'watch':\r\n                setVideoSrc(gData.video);\r\n                setIsLoop(false)\r\n                if (gData.speech) {\r\n                    setSpeech(gData.speech);\r\n                    setHasSpeech(true);\r\n                } else {\r\n                    setHasSpeech(false)\r\n                }\r\n                setShowGuides(gData.guides ? true : false)\r\n                break;\r\n\r\n            case 'decide':\r\n                setVideoSrc(gData.video);\r\n                setIsLoop(true);\r\n                setShowGuides(true);\r\n                break;\r\n\r\n            default:\r\n                setHasSpeech(false);\r\n                setOrderDetail(gData.order ? gData.order : orderDetail);\r\n                setShowGuides(false);\r\n                break;\r\n        }\r\n    }, [step, level])\r\n\r\n    const handleCorrect = (index) => {\r\n        goNextStep(gameData[level][step][\"skip\"][index] ? true : false);\r\n        postMessage(1);\r\n    }\r\n    \r\n    const handleDecide = () => {\r\n        if (gameData[level][step].answer) {\r\n            goNextStep(false)\r\n            postMessage(1);\r\n        } else {\r\n            setAlertId(0);\r\n            setShowAlert(true);\r\n            postMessage(0);\r\n        }\r\n    }\r\n    \r\n    const handleEquipment = (index) => {\r\n        if (gameData[level][step].answer === index) {\r\n            goNextStep(false);\r\n            postMessage(1);\r\n        } else {\r\n            setWatchWrong(true);\r\n            setTempVideoSrc(videoSrc)\r\n            setVideoSrc(10);\r\n            setIsLoop(false);\r\n            setAlertId(0);\r\n            setShowAlert(true);\r\n            postMessage(0);\r\n        }\r\n    }\r\n    \r\n    const handleGlass = (index) => {\r\n        if (gameData[level][step].answer === index) {\r\n            goNextStep(false);\r\n            postMessage(1);\r\n        } else {\r\n            setWatchWrong(true);\r\n            setTempVideoSrc(videoSrc)\r\n            setVideoSrc(20);\r\n            setIsLoop(false);\r\n            setAlertId(0);\r\n            setShowAlert(true);\r\n            postMessage(0);\r\n        }\r\n    }\r\n    const handleDrink = (index) => {\r\n        if (gameData[level][step].answer === index) {\r\n            goNextStep(false);\r\n            postMessage(1);\r\n        } else {\r\n            setWatchWrong(true);\r\n            setTempVideoSrc(videoSrc)\r\n            setVideoSrc(30);\r\n            setIsLoop(false);\r\n            setAlertId(((level + 1) * 2));\r\n            setShowAlert(true);\r\n            postMessage(0);\r\n        }\r\n    }\r\n    \r\n    const handlePour = (choice) => {\r\n        if (gameData[level][step].answer === choice) {\r\n            goNextStep(false)\r\n            postMessage(1);\r\n        } else {\r\n            setAlertId(0);\r\n            setShowAlert(true);\r\n            postMessage(0);\r\n        }\r\n    }\r\n\r\n    const handleAlert = (index) => {\r\n        setShowAlert(false)\r\n        if ((index % 2) === 0) {\r\n            if (hearts === 0) {\r\n                postMessage(2);\r\n                goToFirst();\r\n            } else {\r\n                setHearts(hearts - 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const goFullScr = () => {\r\n        if (isFullScr === true) {\r\n            if (screenfull.isEnabled) {\r\n                screenfull.exit();\r\n                setIsFullScr(false)\r\n            } else {\r\n                alert(\"Your browser does not support fullscreen mode.\")\r\n            }\r\n        } else {\r\n            if (screenfull.isEnabled) {\r\n                screenfull.request();\r\n                setIsFullScr(true)\r\n            } else {\r\n                alert(\"Your browser does not support fullscreen mode.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.wrapper} ${(step > 0 && (actionType === 'equipment' || gameData[level][step - 1].playType === 'equipment')) && classes.equipment} ${(step > 0 && (actionType === 'glass' || gameData[level][step - 1].playType === 'glass')) && classes.glass} ${(step > 0 && (actionType === 'drink' || gameData[level][step - 1].playType === 'drink')) && classes.drink} ${(step > 0 && (actionType === 'pour' || gameData[level][step - 1].playType === 'pour')) && classes.equipment}`}>\r\n\r\n            <MainVideo correctItems={gameData[level][step].answer ? [9] : gameData[level][step].correctItems} level={level} videoSrc={videoSrc} isLoop={isLoop} hasSpeech={hasSpeech} speech={speech} showGuides={showGuides} goNextStep={(skip) => goNextStep(skip)} clockTime={times[level]} handleCorrect={(index) => handleCorrect(index)} handleDecide={handleDecide} isMuted={isMuted} />\r\n            <audio autoPlay playsInline loop controls={false} src={crowdSound} muted={isMuted} />\r\n\r\n            {\r\n                {\r\n                    'equipment': <Equipment isWatchWrong={watchWrong} orderDetail={orderDetail} handleEquipment={(index) => handleEquipment(index)} />,\r\n                    'glass': <Glass isWatchWrong={watchWrong} orderDetail={orderDetail} handleGlass={(index) => handleGlass(index)} />,\r\n                    'drink': <Drink isWatchWrong={watchWrong} orderDetail={orderDetail} handleDrink={(index) => handleDrink(index)} />,\r\n                    'pour': <Pour orderDetail={orderDetail} handlePour={(choice) => handlePour(choice)} />,\r\n                }[actionType]\r\n            }\r\n\r\n            {\r\n                showAlert && <AlertVideo index={alertId} platform={platform} handleAlert={(index) => handleAlert(index)} isMuted={isMuted} />\r\n            }\r\n\r\n            <div onClick={() => setIsMuted(!isMuted)} className={classes.muteBtn}>{isMuted ? \"Unmute\" : \"Mute\"} Sound</div>\r\n            <div onClick={goFullScr} className={classes.fscrBtn}>{isFullScr ? \"Exit\" : \"\"} Full Screen</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameBox\r\n","E:\\area\\eot_restaurant\\src\\components\\welcomeScreen\\WelcomeScreen.js",["74"],"import React, { useState, useEffect } from 'react'\r\nimport Preloader from '../preloader/Preloader'\r\nimport classes from './WelcomeScreen.module.css'\r\n\r\nimport managerVideo from '../../media/video/manager.mp4'\r\nimport q1_timeVideo from '../../media/video/q1_time.mp4'\r\nimport q1_wrongVideo from '../../media/video/q1_wrong.mp4'\r\nimport q2_timeVideo from '../../media/video/q2_wrong.mp4'\r\nimport q2_wrongVideo from '../../media/video/q2_wrong.mp4'\r\nimport q3_timeVideo from '../../media/video/q3_wrong.mp4'\r\nimport q3_wrongVideo from '../../media/video/q3_wrong.mp4'\r\n\r\nconst videos = [managerVideo, q2_wrongVideo, q3_timeVideo, q1_timeVideo, q1_wrongVideo, q2_timeVideo, q3_wrongVideo]\r\n\r\nfunction iOS() {\r\n    return [\r\n        'iPad Simulator',\r\n        'iPhone Simulator',\r\n        'iPod Simulator',\r\n        'iPad',\r\n        'iPhone',\r\n        'iPod'\r\n    ].includes(navigator.platform)\r\n        // iPad on iOS 13 detection\r\n        || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n}\r\n\r\nconst WelcomeScreen = ({ startGame }) => {\r\n    const [isTransit, setIsTransit] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [loadVideoId, setLoadVideoId] = useState(0)\r\n    const [platform, setPlatform] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setPlatform(iOS())\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setIsTransit(true);\r\n        startGame()\r\n    }\r\n\r\n    const handleCanPlayThrough = () => {\r\n        if (loadVideoId === videos.length - 1) {\r\n            setIsLoading(false);\r\n        } else {\r\n            setLoadVideoId(loadVideoId + 1);\r\n            console.log(loadVideoId)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.wrapper} ${isTransit && classes.opacityZero}`}>\r\n            <div className={classes.startBtn} onClick={handleClick}>Start game</div>\r\n            {\r\n                (isLoading && !platform) && <Preloader />\r\n            }\r\n            {\r\n                (isLoading && !platform) && <video className={classes.preVideo} src={videos[loadVideoId]} onCanPlayThrough={handleCanPlayThrough} playsInline autoPlay muted />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen\r\n","E:\\area\\eot_restaurant\\src\\components\\equipment\\Equipment.js",[],"E:\\area\\eot_restaurant\\src\\components\\mainVideo\\MainVideo.js",[],"E:\\area\\eot_restaurant\\src\\components\\drink\\Drink.js",[],"E:\\area\\eot_restaurant\\src\\components\\glass\\Glass.js",[],"E:\\area\\eot_restaurant\\src\\components\\alertVideo\\AlertVideo.js",[],"E:\\area\\eot_restaurant\\src\\components\\pour\\Pour.js",[],"E:\\area\\eot_restaurant\\src\\components\\decide\\Decide.js",[],"E:\\area\\eot_restaurant\\src\\components\\speech\\Speech.js",[],"E:\\area\\eot_restaurant\\src\\components\\signsList\\SignsList.js",[],"E:\\area\\eot_restaurant\\src\\components\\preloader\\Preloader.js",[],"E:\\area\\eot_restaurant\\src\\actions\\postMessage.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":79,"column":5,"nodeType":"81","endLine":79,"endColumn":14,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":96,"column":8,"nodeType":"84","endLine":96,"endColumn":17,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"86","line":139,"column":8,"nodeType":"84","endLine":139,"endColumn":21,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"80","line":34,"column":5,"nodeType":"81","endLine":34,"endColumn":14,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPlatform'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["91"],"React Hook useEffect has a missing dependency: 'level'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAlertId' needs the current value of 'level'.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'orderDetail'. Either include it or remove the dependency array. You can also do a functional update 'setOrderDetail(o => ...)' if you only need 'orderDetail' in the 'setOrderDetail' call.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"95","fix":"101"},"Add dependencies array: []",{"range":"102","text":"103"},"Update the dependencies array to be: [curTime, level]",{"range":"104","text":"105"},"Update the dependencies array to be: [step, level, orderDetail]",{"range":"106","text":"107"},{"range":"108","text":"103"},[2589,2589],", []",[2946,2955],"[curTime, level]",[4257,4270],"[step, level, orderDetail]",[1330,1330]]